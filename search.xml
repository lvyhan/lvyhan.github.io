<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>new</title>
      <link href="/2023/05/24/new/"/>
      <url>/2023/05/24/new/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>系统移植</title>
      <link href="/2023/05/23/xi-tong-yi-zhi/"/>
      <url>/2023/05/23/xi-tong-yi-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="操作系统的基本知识"><a href="#操作系统的基本知识" class="headerlink" title="操作系统的基本知识"></a>操作系统的基本知识</h1><p><strong>操作系统的五大功能</strong>：处理器管理，存储器管理，作业管理，设备管理，文件管理</p><p><strong>处理器管理</strong>：处理器管理最基本的功能是处理中断事件；处理器只能发现中断事件并产生中断而并不能进行处理，配置操作系统后就可对各种事件进行处理，处理器管理的另一功能是处理器调度，根据不同情况进行调度</p><p><strong>存储器管理</strong>：即对内存处理器的管理：分配内存空间，保证各作业占用的存储空间不发生矛盾，并不互相干扰</p><p><strong>作业管理</strong>：每个用户请求系统完成的一个独立的操作称为作业；作业管理是对用户提交的诸多作业进行管理，包括作业的组织、控制、调度等，以尽可能的高效利用系统资源</p><p><strong>设备管理</strong>：负责管理各类外围设备，包括分配、启动、故障处理等。当用户使用外部设备时，必须提出请求，待操作系统进行分配后方可使用</p><p>​        操作系统中设备管理的功能：</p><p>​                1、缓冲管理：缓解CPU和I/O设备速度不匹配的矛盾，提高CPU和I/O的设备利用率，通常为设置缓冲区</p><p>​                2、设备分配：根据用户的I/O请求，分配所需的设备；若I/O设备与CPU之间存在设备控制器和通道，还需为设备分配相对应的控制器和通道</p><p>​                3、设备处理：设备处理程序又称设备驱动程序，基本任务是实现CPU和设备控制器之间的通信</p><p>​                4、设备独立性和虚拟设备：用户向系统申请和使用的设备与实际操作的设备无关</p><p><strong>文件管理</strong>：操作系统对信息资源的管理。操作系统中，将负责存取的管理信息的部分称为文件系统。文件是在逻辑上具有完整意义的一组相关信息的有序集合。文件管理支持文件的存储、检索、修改等操作以及文件的保护功能。</p><h1 id="系统移植"><a href="#系统移植" class="headerlink" title="系统移植"></a>系统移植</h1><p>系统移植，即根据demo板进行的删改开发的新板子，将demo板的操作系统根据删改移植到新板子</p><p>系统移植分为uboot移植和kernel移植</p><h2 id="环境搭建：tftp、nfs"><a href="#环境搭建：tftp、nfs" class="headerlink" title="环境搭建：tftp、nfs"></a><strong>环境搭建：</strong>tftp、nfs</h2><h3 id="tftp：-tiny-ftp，迷你文件传输协议"><a href="#tftp：-tiny-ftp，迷你文件传输协议" class="headerlink" title="tftp： tiny ftp，迷你文件传输协议"></a><strong>tftp：</strong> tiny ftp，迷你文件传输协议</h3><p>​                    sudo apt-get install tfptd-hpa tftp-hpa；mkdir /tftpboot；chmod 777 /tftpboot；</p><p>​                    修改配置文件：sudo vi /etc/default/tftpd-hpa</p><p>​                                                TFTP_USERNAME=”tftp”</p><p>​                                                TFTP_DIRECTORY=”/tftpboot”</p><p>​                                                TFTP_ADDRESS=”0.0.0.0:69”</p><p>​                                                TFTP_OPTIONS=”-c -s -l”</p><p>​                    重启：sudo service tftpd-hpa restart</p><p>​                    测试：客户端在其他目录，登陆：tftp 127.0.0.1；下载：get filename；上传：put filename；退出：quit</p><h3 id="nfs：-network-file-system网络文件系统"><a href="#nfs：-network-file-system网络文件系统" class="headerlink" title="nfs： network file system网络文件系统"></a><strong>nfs：</strong> network file system网络文件系统</h3><p>​                安装：sudo apt-get install nfs-kernel-server</p><p>​                配置：配置/etc/exports文件，该文件决定挂载目录及权限；在文件末尾添加：/rootfs *(rw,sync,no_root_squash,no_subtree_check)</p><p>​                重启：sudo service nfs-kernel-server restart</p><p>​                客户端测试：sudo mount -t nfs 127.0.0.1:/home/ubuntu/rootfs  ./123  取消映射：sudo  mount  ./123</p><p>​                若想使用NFS为开发板的文件系统，需要在rootfs目录下解压一个文件系统</p><h2 id="uboot移植"><a href="#uboot移植" class="headerlink" title="uboot移植"></a>uboot移植</h2><p><strong>uboot主要作用：</strong>引导启动操作系统内核、部署计算机系统、操作flash、串口等硬件驱动、提供人机交互界面</p><p><strong>uboot启动大概流程</strong>：分为汇编阶段和C语言阶段；</p><p>​        汇编阶段，开机启动uboot，核心硬件初始化，自拷贝（拷贝C语言阶段代码到ram中），设置栈空间</p><p>​        C语言阶段：大部分硬件初始化，[选择性进入交互界面]，将内核读取到ram当中，为内核设置参数，调用操作系统</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
